/// Create single column with gutter
/// @author Azin Asili
/// @access public
/// @param {number} $width [100%] - Width of column
/// @param {number} $gutter [map-get($griddle, gutter)] - Padding for column gutter
/// @param {number} $shift [null] - Shift source ordering of column
/// @require {function} _is-gutter - Calculate gutter for row or column
/// @require {function} _is-float - Check if number is a float
/// @output CSS to create column with gutters
/// @example scss
///   .foo {
///     @include grd-column(3/5, 40px);
///   }
/// @example css
///   .foo {
///     float: left;
///     padding-left: 20px;
///     padding-right: 20px;
///     width: 60%;
///   }
@mixin grd-column($width: 100%, $gutter: map-get($griddle, gutter), $shift: null) {
  float: left;
  padding-left: _is-gutter($gutter, col);
  padding-right: _is-gutter($gutter, col);
  width: _is-float($width);

  @if $shift != null {
    left: _is-float($shift) * -1;
    position: relative;
  }
}

/// Alias for `grd-column()` mixin
/// @alias grd-column()
/// @require {mixin} grd-column - Create grid column
@mixin grd-col($args...) {
  @include grd-column($args...);
}
