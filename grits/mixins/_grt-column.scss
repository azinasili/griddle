/// Create single column with gutter
/// @author Azin Asili
/// @access public
/// @param {number} $width [100%] - Width of column
/// @param {number} $gutter [map-get($grits, gutter)] - Padding for column gutter
/// @param {number} $shift [null] - Shift source ordering of column
/// @require {function} _grt_is-gutter - Calculate gutter for row or column
/// @require {function} _grt_is-float - Check if number is a float
/// @output CSS to create column with gutters
/// @example scss
///   .foo {
///     @include grt-column(3/5, 40px);
///   }
/// @example css
///   .foo {
///     display: inline-block;
///     font-size: 1rem;
///     padding-left: 20px;
///     padding-right: 20px;
///     width: 60%;
///   }
@mixin grt-column($width: 100%, $gutter: map-get($grits, gutter), $shift: null) {
  display: inline-block;
  font-size: 1rem;
  padding-left: _grt_is-gutter($gutter, col);
  padding-right: _grt_is-gutter($gutter, col);
  width: _grt_is-float($width);

  @if $shift != null {
    left: _grt_is-float($shift) * -1;
    position: relative;
  }
}

/// Alias for `grt-column()` mixin
/// @alias grt-column
@mixin grt-col($args...) {
  @include grt-column($args...);
}
